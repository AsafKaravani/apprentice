pipeline {
    agent node20
    stages {
				stage('Install Packages') {
						steps {
								script {
										// Install dependencies
										sh 'bash yarn install'
								}
						}
				}
				
        stage('Services') {
            parallel {
                stage('Server') {
                    stages {
                        stage('Pre Build') { steps { sh 'bash services/server/scripts/pre-build.sh' } }
												stage('Build') { steps { sh 'bash services/server/scripts/build.sh' } }
                    }
                }
                stage('Client') {
                    stages {
                        stage('Pre Build') { steps { sh 'bash services/client/scripts/pre-build.sh' } }
												stage('Build') { steps { sh 'bash services/client/scripts/build.sh' } }
                    }
                }
								stage('Hasura') {
                    stages {
                        stage('Pre Build') { steps { sh 'bash services/hasura/scripts/pre-build.sh' } }
												stage('Build') { steps { sh 'bash services/hasura/scripts/build.sh' } }
                    }
                }
								stage('DB') {
                    stages {
                        stage('Pre Build') { steps { sh 'bash services/db/scripts/pre-build.sh' } }
												stage('Build') { steps { sh 'bash services/db/scripts/build.sh' } }
                    }
                }
            }
        }
				stage('Deploy Environment') {
					parallel { 
						stage('Changed Services') {
								steps {
										script {
												def dirsList = load("cicd/functions.groovy").getChangedDirs()
												for (dir in dirsList) {
														echo "Changed directory: ${dir}"
												}
										}
								}
						}
						stage('Not Changed Services') {
								steps {
										script {
												def dirsList = load("cicd/functions.groovy").getNonChangedDirs()
												for (dir in dirsList) {
														echo "Changed directory: ${dir}"
												}
										}
								}
						}

					}
				}
				stage('E2E Tests') {
					steps {
						echo 'Running e2e tests...'
					}
				}
    }
}
