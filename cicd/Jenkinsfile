pipeline {
    agent any

    stages {
        stage('Parallel Build and Test') {
            steps {
                script {
                    // Define the components to loop through
                    def components = ['server', 'client']
                    def parallelStages = [:]

                    // Loop through each component and prepare parallel stages
                    components.each { component ->
                        parallelStages["${component.toUpperCase()} Stages"] = {
                            stage("${component.toUpperCase()} - Lint") {
                                steps {
                                    echo "Linting ${component}..."
                                    // Your linting steps here
                                }
                            }
                            stage("${component.toUpperCase()} - Test") {
                                steps {
                                    echo "Testing ${component}..."
                                    // Your testing steps here
                                }
                            }
                            stage("${component.toUpperCase()} - Deploy") {
                                steps {
                                    echo "Deploying ${component}..."
                                    // Your deployment steps here
                                }
                            }
                            stage("${component.toUpperCase()} - Test Deployment") {
                                steps {
                                    echo "Test Deployment ${component}..."
                                    // Your test deployment steps here
                                }
                            }
                        }
                    }

                    // Execute the prepared stages in parallel
                    parallel parallelStages
                }
            }
        }
    }
}