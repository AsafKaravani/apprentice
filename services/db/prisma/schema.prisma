// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_URL")
}

model Profile {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  email       String  @unique
  picture_url String?
  first_name  String?
  last_name   String?
  phone       String?

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  OrganizationMember OrganizationMember[]
  GroupMember        GroupMember[]
}

model Organization {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  name        String
  description String?
  picture_url String?
  website     String?
  email       String?
  phone       String?

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  OrganizationMember OrganizationMember[]
}

model OrganizationMember {
  id             String       @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String
  profile        Profile      @relation(fields: [profileId], references: [id])
  profileId      String
  role           String

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}

model Group {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  name        String
  description String?
  picture_url String?
  website     String?
  email       String?
  phone       String?

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt

  GroupMember GroupMember[]
}

model GroupMember {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Text
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   String
  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}
